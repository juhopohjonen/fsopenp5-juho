{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst sendBlogCreation = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst changeBlog = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject, config);\n  return response.data;\n};\n\nconst removeBlog = async blog => {\n  let newObject = {};\n  const response = await axios.delete(`${baseUrl}/${blog.id}`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  return response.data;\n};\n\nexport default {\n  getAll,\n  sendBlogCreation,\n  setToken,\n  changeBlog,\n  removeBlog\n};","map":{"version":3,"sources":["/home/juho/Documents/fullstackopen/fsopenp5-juho/blogilista-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","sendBlogCreation","newObject","config","headers","Authorization","post","changeBlog","put","id","removeBlog","blog","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,gBAAgB,GAAG,MAAMC,SAAN,IAAmB;AAC1C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,MAAMO,UAAU,GAAG,MAAML,SAAN,IAAmB;AACpC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACkB,GAAN,CAAW,GAAEjB,OAAQ,IAAGW,SAAS,CAACO,EAAG,EAArC,EAAwCP,SAAxC,EAAmDC,MAAnD,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,MAAMU,UAAU,GAAG,MAAMC,IAAN,IAAc;AAC/B,MAAIT,SAAS,GAAG,EAAhB;AAEA,QAAMH,QAAQ,GAAG,MAAMT,KAAK,CAACsB,MAAN,CAAc,GAAErB,OAAQ,IAAGoB,IAAI,CAACF,EAAG,EAAnC,EAAsC;AAC3DL,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADkD,GAAtC,CAAvB;AAGA,SAAOO,QAAQ,CAACC,IAAhB;AACD,CAPD;;AASA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,gBAAV;AAA4BR,EAAAA,QAA5B;AAAsCc,EAAAA,UAAtC;AAAkDG,EAAAA;AAAlD,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst sendBlogCreation = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  \n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data \n}\n\nconst changeBlog = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n  return response.data\n}\n\nconst removeBlog = async blog => {\n  let newObject = {}\n\n  const response = await axios.delete(`${baseUrl}/${blog.id}`, {\n    headers: { Authorization: token }\n  })\n  return response.data\n}\n\nexport default { getAll, sendBlogCreation, setToken, changeBlog, removeBlog }"]},"metadata":{},"sourceType":"module"}