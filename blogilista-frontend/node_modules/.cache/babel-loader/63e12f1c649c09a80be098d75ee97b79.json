{"ast":null,"code":"var _jsxFileName = \"/home/juho/Documents/fullstackopen/fsopenp5-juho/blogilista-frontend/src/components/CreateNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport blogService from '../services/blogs';\nimport { SuccessMessage, FailedMessage } from '../components/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNew = _ref => {\n  _s();\n\n  let {\n    setBlogs,\n    blogs,\n    createBlogFunc\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [failedMessage, setFailedMessage] = useState(null);\n  const [newVisible, setNewVisible] = useState(false);\n  const showWhenVisible = {\n    display: newVisible ? '' : 'none'\n  };\n  const showWhenHidden = {\n    display: newVisible ? 'none' : ''\n  };\n\n  const sendBlog = async event => {\n    event.preventDefault();\n    let createdBlog = null;\n\n    try {\n      // createdBlog = await blogService.sendBlogCreation({ title, author, url })    \n      const createdBlog = await createBlogFunc({\n        title,\n        author,\n        url\n      });\n      console.log('createdBlog is', createdBlog);\n      setSuccessMessage(`A new blog ${title} by ${author} added`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      setBlogs(blogs.concat(createdBlog));\n      setNewVisible(false);\n    } catch (e) {\n      setFailedMessage('Blog creation failed.');\n      setTimeout(() => {\n        setFailedMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SuccessMessage, {\n      message: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FailedMessage, {\n      message: failedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: showWhenHidden,\n      onClick: () => setNewVisible(!newVisible),\n      children: \"new note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendBlog,\n      style: showWhenVisible,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"titleinput\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"author:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"authorinput\",\n          value: author,\n          onChange: e => setAuthor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"url:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"urlinput\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: showWhenVisible,\n      onClick: () => setNewVisible(false),\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateNew, \"EDyJkW3XIipP88wsP5cVwm2eDuM=\");\n\n_c = CreateNew;\nexport default CreateNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNew\");","map":{"version":3,"sources":["/home/juho/Documents/fullstackopen/fsopenp5-juho/blogilista-frontend/src/components/CreateNew.js"],"names":["React","useState","blogService","SuccessMessage","FailedMessage","CreateNew","setBlogs","blogs","createBlogFunc","title","setTitle","author","setAuthor","url","setUrl","successMessage","setSuccessMessage","failedMessage","setFailedMessage","newVisible","setNewVisible","showWhenVisible","display","showWhenHidden","sendBlog","event","preventDefault","createdBlog","console","log","setTimeout","concat","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport blogService from '../services/blogs'\n\nimport { SuccessMessage, FailedMessage } from '../components/messages' \n\nconst CreateNew = ({ setBlogs, blogs, createBlogFunc }) => {\n\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [failedMessage, setFailedMessage] = useState(null)\n\n    const [newVisible, setNewVisible] = useState(false)\n\n    const showWhenVisible = { display: newVisible ? '' : 'none' }\n    const showWhenHidden = { display: newVisible ? 'none' : '' }\n\n    const sendBlog = async (event) => {\n        event.preventDefault()\n\n        let createdBlog = null\n        \n    \n        try {\n            // createdBlog = await blogService.sendBlogCreation({ title, author, url })    \n            const createdBlog = await createBlogFunc({ title, author, url })\n            console.log('createdBlog is', createdBlog)\n\n            setSuccessMessage(`A new blog ${title} by ${author} added`)\n\n            setTimeout(() => {\n                setSuccessMessage(null)\n            }, 5000);\n\n            setBlogs(blogs.concat(createdBlog))\n\n            setNewVisible(false)\n\n        } catch (e) {\n\n            setFailedMessage('Blog creation failed.')\n\n            setTimeout(() => {\n                setFailedMessage(null)\n            }, 5000);\n        }\n\n\n    }\n\n    return (\n        <div>\n            <SuccessMessage message={successMessage} />\n            <FailedMessage message={failedMessage} />\n\n            <h2>create new</h2>\n\n            <button style={showWhenHidden} onClick={() => setNewVisible(!newVisible)}>new note</button>\n\n            <form onSubmit={sendBlog} style={showWhenVisible}>\n                <div>title:<input id=\"titleinput\" value={title} onChange={(e) => setTitle(e.target.value)} /></div>\n                <div>author:<input id=\"authorinput\" value={author} onChange={(e) => setAuthor(e.target.value)} /></div>\n                <div>url:<input id=\"urlinput\" value={url} onChange={(e) => setUrl(e.target.value)} /></div>\n\n                <input type='submit' value={'create'} />\n            </form>\n            <button style={showWhenVisible} onClick={() => setNewVisible(false)}>cancel</button>\n        </div>\n    )\n}\n\nexport default CreateNew"]},"metadata":{},"sourceType":"module"}